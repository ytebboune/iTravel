model DateVote {
  id        String         @id @default(uuid())
  projectId String
  dateId    String
  userId    String
  vote      Boolean
  comment   String?
  votedAt   DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  // Relations
  project   TravelProject  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  date      DateSuggestion @relation(fields: [dateId], references: [id], onDelete: Cascade)
  user      User           @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([projectId, dateId, userId])
  @@index([projectId])
  @@index([dateId])
  @@index([userId])
  @@map("date_votes")
}

model DestinationVote {
  id            String        @id @default(uuid())
  projectId     String
  destinationId String
  userId        String
  vote          Boolean
  comment       String?
  votedAt       DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relations
  project       TravelProject @relation(fields: [projectId], references: [id], onDelete: Cascade)
  destination   Destination   @relation(fields: [destinationId], references: [id], onDelete: Cascade)
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([projectId, destinationId, userId])
  @@index([projectId])
  @@index([destinationId])
  @@index([userId])
  @@map("destination_votes")
} 